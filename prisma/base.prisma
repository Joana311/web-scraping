//The [db push] command pushes the state of your Prisma schema file
// to the database without using migrations.
//It creates the database if the database does not exist.
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// from "./exrx.prisma"
model Exercise {
  id           String         @id @default(uuid())
  UserExercise UserExercise[]
}

// from "./auth.prisma"
model User {
  id       String        @id @default(uuid())
  workouts UserWorkout[]
}

model UserSecrets {
  user_id String @unique
  secret  String
}

model UserWorkout {
  created_at DateTime       @default(now())
  updated_at DateTime       @updatedAt
  ended_at   DateTime?
  id         String         @id @default(cuid())
  owner      User?          @relation(fields: [owner_id], references: [id])
  owner_id   String
  exercises  UserExercise[]
  closed     Boolean        @default(false)
}

model UserExercise {
  exercise    Exercise     @relation(fields: [exercise_id], references: [id])
  exercise_id String
  id          String       @id @default(cuid())
  sets        Set[]
  Workout     UserWorkout? @relation(fields: [workout_id], references: [id])
  workout_id  String?

  @@unique([exercise_id, workout_id, id])
}

model Set {
  id               Int          @id @default(autoincrement())
  weight           Int?
  reps             Int          @default(0)
  rpe              Int          @default(0)
  UserExercise     UserExercise @relation(fields: [user_exercise_id], references: [id])
  user_exercise_id String
}
